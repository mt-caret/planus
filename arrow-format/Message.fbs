// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

include "Schema.fbs";
include "SparseTensor.fbs";
include "Tensor.fbs";

namespace org.apache.arrow.flatbuf;











struct FieldNode {
  
  
  length: long;

  
  
  
  null_count: long;
}

enum CompressionType:byte {
  // LZ4 frame format, for portability, as provided by lz4frame.h or wrappers
  // thereof. Not to be confused with "raw" (also called "block") format
  // provided by lz4.h
  LZ4_FRAME,

  // Zstandard
  ZSTD
}




enum BodyCompressionMethod:byte {
  
  
  
  
  
  
  
  BUFFER
}




table BodyCompression {
  
  
  codec: CompressionType = LZ4_FRAME;

  
  method: BodyCompressionMethod = BUFFER;
}




table RecordBatch {
  
  
  length: long;

  
  nodes: [FieldNode];

  
  
  
  
  
  
  buffers: [Buffer];

  
  compression: BodyCompression;

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  variadicBufferCounts: [long];
}








table DictionaryBatch {
  id: long;
  data: RecordBatch;

  
  
  
  isDelta: bool = false;
}










union MessageHeader {
  Schema, DictionaryBatch, RecordBatch, Tensor, SparseTensor
}

table Message {
  version: org.apache.arrow.flatbuf.MetadataVersion;
  header: MessageHeader;
  bodyLength: long;
  custom_metadata: [ KeyValue ];
}

root_type Message;
